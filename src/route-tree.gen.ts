/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as publicIndexImport } from './app/(public)/index'
import { Route as featuresLayoutImport } from './app/(features)/_layout'
import { Route as authLoginIndexImport } from './app/(auth)/login/index'

// Create Virtual Routes

const featuresImport = createFileRoute('/(features)')()
const featuresLayoutDashboardIndexLazyImport = createFileRoute(
  '/(features)/_layout/dashboard/',
)()

// Create/Update Routes

const featuresRoute = featuresImport.update({
  id: '/(features)',
  getParentRoute: () => rootRoute,
} as any)

const publicIndexRoute = publicIndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const featuresLayoutRoute = featuresLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => featuresRoute,
} as any)

const authLoginIndexRoute = authLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const featuresLayoutDashboardIndexLazyRoute =
  featuresLayoutDashboardIndexLazyImport
    .update({
      path: '/dashboard/',
      getParentRoute: () => featuresLayoutRoute,
    } as any)
    .lazy(() =>
      import('./app/(features)/_layout.dashboard/index.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(features)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof featuresImport
      parentRoute: typeof rootRoute
    }
    '/(features)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof featuresLayoutImport
      parentRoute: typeof featuresRoute
    }
    '/(public)/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(features)/_layout/dashboard/': {
      id: '/_layout/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof featuresLayoutDashboardIndexLazyImport
      parentRoute: typeof featuresLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  featuresRoute: featuresRoute.addChildren({
    featuresLayoutRoute: featuresLayoutRoute.addChildren({
      featuresLayoutDashboardIndexLazyRoute,
    }),
  }),
  publicIndexRoute,
  authLoginIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/login/"
      ]
    },
    "/": {
      "filePath": "(public)/index.tsx"
    },
    "/_layout": {
      "filePath": "(features)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/dashboard/"
      ]
    },
    "/login/": {
      "filePath": "(auth)/login/index.tsx"
    },
    "/_layout/dashboard/": {
      "filePath": "(features)/_layout.dashboard/index.lazy.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
