name: Deploy app to Windows Server (Self-hosted)

on:
   push:
      branches:
         - develop
   pull_request:
      branches:
         - develop
   workflow_dispatch:

jobs:
   sonarcloud:
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v4
           with:
              fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
         - name: Analyze with SonarCloud
           uses: SonarSource/sonarcloud-github-action@master
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

   test:
      runs-on: ubuntu-latest
      needs: sonarcloud
      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Set up Node.js
           uses: actions/setup-node@v4
           with:
              node-version: 20

         - name: Install dependencies
           run: npm ci

         - name: Unit testing
           run: npm run test

   # build:
   #    needs: test
   #    runs-on: self-hosted # Chạy trên self-hosted runner
   #    steps:
   #       - name: Checkout code
   #         uses: actions/checkout@v4

   #       - name: Set up Node.js
   #         uses: actions/setup-node@v4
   #         with:
   #            node-version: '20'

   #       - name: Install dependencies
   #         run: npm ci

   #       - name: Generate PWA assets
   #         run: npm run generate-pwa-assets

   #       - name: Build the React app
   #         run: npm run build

   #       - name: Archive production artifacts
   #         uses: actions/upload-artifact@v4
   #         with:
   #            name: build-artifacts
   #            path: dist

   deploy:
      runs-on: self-hosted
      needs: test
      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Set up Node.js
           uses: actions/setup-node@v4
           with:
              node-version: '20' # Specify the version of Node.js you want to use

         - name: Install dependencies
           run: npm install

         - name: Generate PWA assets
           run: npm run generate-pwa-assets

         - name: Build and bundling application
           run: npm run build

         - name: Copy build
           run: |
              # Define the path where you want to deploy your app on the server
              $destinationPath = "C:\inetpub\wwwroot\your-react-app"

              # Create the directory if it doesn't exist
              if (-Not (Test-Path $destinationPath)) {
                 New-Item -ItemType Directory -Path $destinationPath
              }

              # Remove old files
              Remove-Item -Recurse -Force "$destinationPath\*"

              # Copy the build output to the server's web root
              Copy-Item -Recurse -Force build\* $destinationPath

         - name: Deploy to Windows Server
           run: pm2 restart 'wms-client' --update-env
