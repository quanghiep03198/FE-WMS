name: Deploy to Windows Server

on:
   push:
      branches: ['develop']
   pull_request:
      branches: ['develop']
   workflow_dispatch:

jobs:
   sonarcloud:
      name: SonarCloud
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v3
           with:
              fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
         - name: SonarCloud Scan
           uses: SonarSource/sonarcloud-github-action@master
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
   build:
      runs-on: self-hosted
      needs: SonarCloud
      environment: env
      steps:
         - name: Checkout code
           uses: actions/checkout@v3

         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
              node-version: '20'

         - name: Install dependencies
           run: npm install

         - name: Build the React app
           run: npm run build

         - name: Archive production artifacts
           if: github.ref == 'refs/heads/develop'
           uses: actions/upload-artifact@v4
           with:
              name: build-artifacts
              path: dist

   deploy:
      runs-on: self-hosted
      needs: build
      steps:
         - name: Download build artifacts
           uses: actions/download-artifact@v4
           with:
              name: build-artifacts
              path: dist

         - name: Deploy to Windows Server
           uses: appleboy/scp-action@v0.1.4
           env:
              host: ${{ secrets.WINDOWS_SERVER_USERNAME }}
              password: ${{ secrets.WINDOWS_SERVER_PASSWORD }}
           with:
              host: 10.30.0.19
              username: ${{ secrets.WINDOWS_SERVER_USERNAME }}
              password: ${{ secrets.WINDOWS_SERVER_PASSWORD }}
              source: 'dist/*'
              target: 'C:/Users/Administrator/i-wms/client'

         - name: Restart PM2 process
           run: |
              sshpass -p ${{ secrets.WINDOWS_SERVER_PASSWORD }} ssh ${{ secrets.WINDOWS_SERVER_USERNAME }}@10.30.0.19 `
              "cd C:/Users/Administrator/i-wms/client && pm2 restart 'wms-client'"
