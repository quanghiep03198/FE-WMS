name: Deploy app to Windows Server (Self-hosted)

on:
   push:
      branches:
         - develop
   pull_request:
      branches:
         - develop
   workflow_dispatch:

jobs:
   sonarcloud:
      runs-on: ubuntu-latest
      steps:
         - uses: actions/checkout@v4
           with:
              fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
         - name: Analyze with SonarCloud
           uses: SonarSource/sonarcloud-github-action@master
           env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

   test:
      runs-on: ubuntu-latest
      needs: sonarcloud
      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Set up Node.js
           uses: actions/setup-node@v4
           with:
              node-version: 20
              cache: npm

         - name: Install dependencies
           run: npm ci

         - name: Unit testing
           run: npm run test

   deploy:
      runs-on: self-hosted
      needs: test
      steps:
         - name: Pull latest code from Github & Re-deploy
           run: |
              cd ${{ env.WORK_DIR}}
              ls
              git reset --hard origin/develop
              git pull origin develop

         - name: Load environment variables
           run: |
              echo "Loading environment variables from .env.production..."
              export $(cat .env.production | xargs)

         - name: Install dependencies
           run: npm ci

         - name: Clear npm cache
           run: npm cache clean --force

         - name: Generate PWA assets
           run: npm run generate-pwa-assets

         - name: Build the React app
           run: npm run build

         - name: Set permissions for dist folder
           run: chmod -R 777 dist

         - name: Restart PM2 process
           run: |
              pm2 delete 'wms-client'
              pm2 serve ./dist --name 'wms-client' --port 3000 --spa
