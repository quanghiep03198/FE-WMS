// Generated by CodiumAI

import { _JSON } from '@/common/utils/json'
import { describe, expect, it } from 'vitest'

describe('parseJSON', () => {
	// Should return null if argument is null
	it('should return null when argument is null', () => {
		const result = _JSON.parse(null)
		expect(result).toBeNull()
	})

	// Should return null if argument is empty string
	it('should return null when argument is argument value', () => {
		const result = _JSON.parse('Hello World')
		console.log(result)
		expect(result).toBe('Hello World')
	})
})

describe('Is valid JSON', () => {
	it('should return false when given a invalid JSON string', () => {
		const arg = 'Hello World'
		const result = _JSON.valid(arg)
		expect(result).toBe(false)
	})

	// Returns true when given a valid JSON string
	it('should return true when given a valid JSON string', () => {
		const arg = '{"name": "John", "age": 30}'
		const result = _JSON.valid(arg)
		expect(result).toBe(true)
	})

	// Returns false when given a string that is only partially valid JSON
	it('should return false when given a string that is only partially valid JSON', () => {
		const arg = '{"name": "John", "age": 30,}'
		const result = _JSON.valid(arg)
		expect(result).toBe(false)
	})
})
